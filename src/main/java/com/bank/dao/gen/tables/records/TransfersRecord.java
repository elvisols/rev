/*
 * This file is generated by jOOQ.
 */
package com.bank.dao.gen.tables.records;


import com.bank.dao.gen.tables.Transfers;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransfersRecord extends UpdatableRecordImpl<TransfersRecord> implements Record8<String, BigDecimal, String, String, String, String, String, Timestamp> {

    private static final long serialVersionUID = -255020799;

    /**
     * Setter for <code>REV_DB.TRANSFERS.REF</code>.
     */
    public void setRef(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.REF</code>.
     */
    public String getRef() {
        return (String) get(0);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.TXN_AMOUNT</code>.
     */
    public void setTxnAmount(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.TXN_AMOUNT</code>.
     */
    public BigDecimal getTxnAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.TXN_CCY</code>.
     */
    public void setTxnCcy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.TXN_CCY</code>.
     */
    public String getTxnCcy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.DEBITED_ACCOUNT_NO</code>.
     */
    public void setDebitedAccountNo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.DEBITED_ACCOUNT_NO</code>.
     */
    public String getDebitedAccountNo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.CREDITED_ACCOUNT_NO</code>.
     */
    public void setCreditedAccountNo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.CREDITED_ACCOUNT_NO</code>.
     */
    public String getCreditedAccountNo() {
        return (String) get(4);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.TXN_NARRATION</code>.
     */
    public void setTxnNarration(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.TXN_NARRATION</code>.
     */
    public String getTxnNarration() {
        return (String) get(5);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.BANK_CODE</code>.
     */
    public void setBankCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.BANK_CODE</code>.
     */
    public String getBankCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>REV_DB.TRANSFERS.TXN_TIMESTAMP</code>.
     */
    public void setTxnTimestamp(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>REV_DB.TRANSFERS.TXN_TIMESTAMP</code>.
     */
    public Timestamp getTxnTimestamp() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, BigDecimal, String, String, String, String, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, BigDecimal, String, String, String, String, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Transfers.TRANSFERS.REF;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Transfers.TRANSFERS.TXN_AMOUNT;
    }

    @Override
    public Field<String> field3() {
        return Transfers.TRANSFERS.TXN_CCY;
    }

    @Override
    public Field<String> field4() {
        return Transfers.TRANSFERS.DEBITED_ACCOUNT_NO;
    }

    @Override
    public Field<String> field5() {
        return Transfers.TRANSFERS.CREDITED_ACCOUNT_NO;
    }

    @Override
    public Field<String> field6() {
        return Transfers.TRANSFERS.TXN_NARRATION;
    }

    @Override
    public Field<String> field7() {
        return Transfers.TRANSFERS.BANK_CODE;
    }

    @Override
    public Field<Timestamp> field8() {
        return Transfers.TRANSFERS.TXN_TIMESTAMP;
    }

    @Override
    public String component1() {
        return getRef();
    }

    @Override
    public BigDecimal component2() {
        return getTxnAmount();
    }

    @Override
    public String component3() {
        return getTxnCcy();
    }

    @Override
    public String component4() {
        return getDebitedAccountNo();
    }

    @Override
    public String component5() {
        return getCreditedAccountNo();
    }

    @Override
    public String component6() {
        return getTxnNarration();
    }

    @Override
    public String component7() {
        return getBankCode();
    }

    @Override
    public Timestamp component8() {
        return getTxnTimestamp();
    }

    @Override
    public String value1() {
        return getRef();
    }

    @Override
    public BigDecimal value2() {
        return getTxnAmount();
    }

    @Override
    public String value3() {
        return getTxnCcy();
    }

    @Override
    public String value4() {
        return getDebitedAccountNo();
    }

    @Override
    public String value5() {
        return getCreditedAccountNo();
    }

    @Override
    public String value6() {
        return getTxnNarration();
    }

    @Override
    public String value7() {
        return getBankCode();
    }

    @Override
    public Timestamp value8() {
        return getTxnTimestamp();
    }

    @Override
    public TransfersRecord value1(String value) {
        setRef(value);
        return this;
    }

    @Override
    public TransfersRecord value2(BigDecimal value) {
        setTxnAmount(value);
        return this;
    }

    @Override
    public TransfersRecord value3(String value) {
        setTxnCcy(value);
        return this;
    }

    @Override
    public TransfersRecord value4(String value) {
        setDebitedAccountNo(value);
        return this;
    }

    @Override
    public TransfersRecord value5(String value) {
        setCreditedAccountNo(value);
        return this;
    }

    @Override
    public TransfersRecord value6(String value) {
        setTxnNarration(value);
        return this;
    }

    @Override
    public TransfersRecord value7(String value) {
        setBankCode(value);
        return this;
    }

    @Override
    public TransfersRecord value8(Timestamp value) {
        setTxnTimestamp(value);
        return this;
    }

    @Override
    public TransfersRecord values(String value1, BigDecimal value2, String value3, String value4, String value5, String value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransfersRecord
     */
    public TransfersRecord() {
        super(Transfers.TRANSFERS);
    }

    /**
     * Create a detached, initialised TransfersRecord
     */
    public TransfersRecord(String ref, BigDecimal txnAmount, String txnCcy, String debitedAccountNo, String creditedAccountNo, String txnNarration, String bankCode, Timestamp txnTimestamp) {
        super(Transfers.TRANSFERS);

        set(0, ref);
        set(1, txnAmount);
        set(2, txnCcy);
        set(3, debitedAccountNo);
        set(4, creditedAccountNo);
        set(5, txnNarration);
        set(6, bankCode);
        set(7, txnTimestamp);
    }
}
