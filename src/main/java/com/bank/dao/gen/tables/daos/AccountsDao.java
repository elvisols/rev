/*
 * This file is generated by jOOQ.
 */
package com.bank.dao.gen.tables.daos;


import com.bank.dao.gen.tables.Accounts;
import com.bank.dao.gen.tables.records.AccountsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsDao extends DAOImpl<AccountsRecord, com.bank.dao.gen.tables.pojos.Accounts, Integer> {

    /**
     * Create a new AccountsDao without any configuration
     */
    public AccountsDao() {
        super(Accounts.ACCOUNTS, com.bank.dao.gen.tables.pojos.Accounts.class);
    }

    /**
     * Create a new AccountsDao with an attached configuration
     */
    public AccountsDao(Configuration configuration) {
        super(Accounts.ACCOUNTS, com.bank.dao.gen.tables.pojos.Accounts.class, configuration);
    }

    @Override
    public Integer getId(com.bank.dao.gen.tables.pojos.Accounts object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchById(Integer... values) {
        return fetch(Accounts.ACCOUNTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.bank.dao.gen.tables.pojos.Accounts fetchOneById(Integer value) {
        return fetchOne(Accounts.ACCOUNTS.ID, value);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByCustomerId(Integer... values) {
        return fetch(Accounts.ACCOUNTS.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfAccountNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ACCOUNT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByAccountNo(String... values) {
        return fetch(Accounts.ACCOUNTS.ACCOUNT_NO, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfAccountName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ACCOUNT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NAME IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByAccountName(String... values) {
        return fetch(Accounts.ACCOUNTS.ACCOUNT_NAME, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_TYPE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfAccountType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ACCOUNT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_TYPE IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByAccountType(String... values) {
        return fetch(Accounts.ACCOUNTS.ACCOUNT_TYPE, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_PHONE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfAccountPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ACCOUNT_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_PHONE IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByAccountPhone(String... values) {
        return fetch(Accounts.ACCOUNTS.ACCOUNT_PHONE, values);
    }

    /**
     * Fetch records that have <code>BALANCE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfBalance(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BALANCE IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByBalance(BigDecimal... values) {
        return fetch(Accounts.ACCOUNTS.BALANCE, values);
    }

    /**
     * Fetch records that have <code>CCY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfCcy(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.CCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CCY IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByCcy(String... values) {
        return fetch(Accounts.ACCOUNTS.CCY, values);
    }

    /**
     * Fetch records that have <code>BANK_CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfBankCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.BANK_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BANK_CODE IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByBankCode(String... values) {
        return fetch(Accounts.ACCOUNTS.BANK_CODE, values);
    }

    /**
     * Fetch records that have <code>KYC_LEVEL BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfKycLevel(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.KYC_LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>KYC_LEVEL IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByKycLevel(Integer... values) {
        return fetch(Accounts.ACCOUNTS.KYC_LEVEL, values);
    }

    /**
     * Fetch records that have <code>CREATED BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchRangeOfCreated(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED IN (values)</code>
     */
    public List<com.bank.dao.gen.tables.pojos.Accounts> fetchByCreated(Timestamp... values) {
        return fetch(Accounts.ACCOUNTS.CREATED, values);
    }
}
