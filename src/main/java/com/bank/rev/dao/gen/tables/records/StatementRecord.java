/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen.tables.records;


import com.bank.rev.dao.gen.tables.Statement;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatementRecord extends UpdatableRecordImpl<StatementRecord> implements Record9<Integer, Integer, String, String, Timestamp, BigDecimal, String, String, String> {

    private static final long serialVersionUID = -468782225;

    /**
     * Setter for <code>REV_DB.STATEMENT.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.CUSTOMER_ID</code>.
     */
    public void setCustomerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.CUSTOMER_ID</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.ACCOUNT_NO</code>.
     */
    public void setAccountNo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.ACCOUNT_NO</code>.
     */
    public String getAccountNo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.CCY</code>.
     */
    public void setCcy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.CCY</code>.
     */
    public String getCcy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.TXN_TIMESTAMP</code>.
     */
    public void setTxnTimestamp(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.TXN_TIMESTAMP</code>.
     */
    public Timestamp getTxnTimestamp() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.TXN_AMOUNT</code>.
     */
    public void setTxnAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.TXN_AMOUNT</code>.
     */
    public BigDecimal getTxnAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.DR_CR</code>.
     */
    public void setDrCr(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.DR_CR</code>.
     */
    public String getDrCr() {
        return (String) get(6);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.NARRATION</code>.
     */
    public void setNarration(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.NARRATION</code>.
     */
    public String getNarration() {
        return (String) get(7);
    }

    /**
     * Setter for <code>REV_DB.STATEMENT.BANK_CODE</code>.
     */
    public void setBankCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>REV_DB.STATEMENT.BANK_CODE</code>.
     */
    public String getBankCode() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, Timestamp, BigDecimal, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, String, Timestamp, BigDecimal, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Statement.STATEMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Statement.STATEMENT.CUSTOMER_ID;
    }

    @Override
    public Field<String> field3() {
        return Statement.STATEMENT.ACCOUNT_NO;
    }

    @Override
    public Field<String> field4() {
        return Statement.STATEMENT.CCY;
    }

    @Override
    public Field<Timestamp> field5() {
        return Statement.STATEMENT.TXN_TIMESTAMP;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Statement.STATEMENT.TXN_AMOUNT;
    }

    @Override
    public Field<String> field7() {
        return Statement.STATEMENT.DR_CR;
    }

    @Override
    public Field<String> field8() {
        return Statement.STATEMENT.NARRATION;
    }

    @Override
    public Field<String> field9() {
        return Statement.STATEMENT.BANK_CODE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCustomerId();
    }

    @Override
    public String component3() {
        return getAccountNo();
    }

    @Override
    public String component4() {
        return getCcy();
    }

    @Override
    public Timestamp component5() {
        return getTxnTimestamp();
    }

    @Override
    public BigDecimal component6() {
        return getTxnAmount();
    }

    @Override
    public String component7() {
        return getDrCr();
    }

    @Override
    public String component8() {
        return getNarration();
    }

    @Override
    public String component9() {
        return getBankCode();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCustomerId();
    }

    @Override
    public String value3() {
        return getAccountNo();
    }

    @Override
    public String value4() {
        return getCcy();
    }

    @Override
    public Timestamp value5() {
        return getTxnTimestamp();
    }

    @Override
    public BigDecimal value6() {
        return getTxnAmount();
    }

    @Override
    public String value7() {
        return getDrCr();
    }

    @Override
    public String value8() {
        return getNarration();
    }

    @Override
    public String value9() {
        return getBankCode();
    }

    @Override
    public StatementRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StatementRecord value2(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public StatementRecord value3(String value) {
        setAccountNo(value);
        return this;
    }

    @Override
    public StatementRecord value4(String value) {
        setCcy(value);
        return this;
    }

    @Override
    public StatementRecord value5(Timestamp value) {
        setTxnTimestamp(value);
        return this;
    }

    @Override
    public StatementRecord value6(BigDecimal value) {
        setTxnAmount(value);
        return this;
    }

    @Override
    public StatementRecord value7(String value) {
        setDrCr(value);
        return this;
    }

    @Override
    public StatementRecord value8(String value) {
        setNarration(value);
        return this;
    }

    @Override
    public StatementRecord value9(String value) {
        setBankCode(value);
        return this;
    }

    @Override
    public StatementRecord values(Integer value1, Integer value2, String value3, String value4, Timestamp value5, BigDecimal value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatementRecord
     */
    public StatementRecord() {
        super(Statement.STATEMENT);
    }

    /**
     * Create a detached, initialised StatementRecord
     */
    public StatementRecord(Integer id, Integer customerId, String accountNo, String ccy, Timestamp txnTimestamp, BigDecimal txnAmount, String drCr, String narration, String bankCode) {
        super(Statement.STATEMENT);

        set(0, id);
        set(1, customerId);
        set(2, accountNo);
        set(3, ccy);
        set(4, txnTimestamp);
        set(5, txnAmount);
        set(6, drCr);
        set(7, narration);
        set(8, bankCode);
    }
}
