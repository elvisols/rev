/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen.tables.daos;


import com.bank.rev.dao.gen.tables.Account;
import com.bank.rev.dao.gen.tables.records.AccountRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountDao extends DAOImpl<AccountRecord, com.bank.rev.dao.gen.tables.pojos.Account, Integer> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(Account.ACCOUNT, com.bank.rev.dao.gen.tables.pojos.Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    public AccountDao(Configuration configuration) {
        super(Account.ACCOUNT, com.bank.rev.dao.gen.tables.pojos.Account.class, configuration);
    }

    @Override
    public Integer getId(com.bank.rev.dao.gen.tables.pojos.Account object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Account.ACCOUNT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchById(Integer... values) {
        return fetch(Account.ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.bank.rev.dao.gen.tables.pojos.Account fetchOneById(Integer value) {
        return fetchOne(Account.ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Account.ACCOUNT.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByCustomerId(Integer... values) {
        return fetch(Account.ACCOUNT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfAccountNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.ACCOUNT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByAccountNo(String... values) {
        return fetch(Account.ACCOUNT.ACCOUNT_NO, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfAccountName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.ACCOUNT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NAME IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByAccountName(String... values) {
        return fetch(Account.ACCOUNT.ACCOUNT_NAME, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_TYPE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfAccountType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.ACCOUNT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_TYPE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByAccountType(String... values) {
        return fetch(Account.ACCOUNT.ACCOUNT_TYPE, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_PHONE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfAccountPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.ACCOUNT_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_PHONE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByAccountPhone(String... values) {
        return fetch(Account.ACCOUNT.ACCOUNT_PHONE, values);
    }

    /**
     * Fetch records that have <code>BALANCE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfBalance(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Account.ACCOUNT.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BALANCE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByBalance(BigDecimal... values) {
        return fetch(Account.ACCOUNT.BALANCE, values);
    }

    /**
     * Fetch records that have <code>CCY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfCcy(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.CCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CCY IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByCcy(String... values) {
        return fetch(Account.ACCOUNT.CCY, values);
    }

    /**
     * Fetch records that have <code>BANK_CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfBankCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.BANK_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BANK_CODE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByBankCode(String... values) {
        return fetch(Account.ACCOUNT.BANK_CODE, values);
    }

    /**
     * Fetch records that have <code>KYC_LEVEL BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfKycLevel(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Account.ACCOUNT.KYC_LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>KYC_LEVEL IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByKycLevel(Integer... values) {
        return fetch(Account.ACCOUNT.KYC_LEVEL, values);
    }

    /**
     * Fetch records that have <code>CREATED BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchRangeOfCreated(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Account.ACCOUNT.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Account> fetchByCreated(Timestamp... values) {
        return fetch(Account.ACCOUNT.CREATED, values);
    }
}
