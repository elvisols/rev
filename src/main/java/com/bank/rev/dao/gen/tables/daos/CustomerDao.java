/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen.tables.daos;


import com.bank.rev.dao.gen.tables.Customer;
import com.bank.rev.dao.gen.tables.records.CustomerRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerDao extends DAOImpl<CustomerRecord, com.bank.rev.dao.gen.tables.pojos.Customer, Integer> {

    /**
     * Create a new CustomerDao without any configuration
     */
    public CustomerDao() {
        super(Customer.CUSTOMER, com.bank.rev.dao.gen.tables.pojos.Customer.class);
    }

    /**
     * Create a new CustomerDao with an attached configuration
     */
    public CustomerDao(Configuration configuration) {
        super(Customer.CUSTOMER, com.bank.rev.dao.gen.tables.pojos.Customer.class, configuration);
    }

    @Override
    public Integer getId(com.bank.rev.dao.gen.tables.pojos.Customer object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customer.CUSTOMER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchById(Integer... values) {
        return fetch(Customer.CUSTOMER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.bank.rev.dao.gen.tables.pojos.Customer fetchOneById(Integer value) {
        return fetchOne(Customer.CUSTOMER.ID, value);
    }

    /**
     * Fetch records that have <code>FULL_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfFullName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.FULL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FULL_NAME IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByFullName(String... values) {
        return fetch(Customer.CUSTOMER.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>EMAIL BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EMAIL IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByEmail(String... values) {
        return fetch(Customer.CUSTOMER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>PHONE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PHONE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByPhone(String... values) {
        return fetch(Customer.CUSTOMER.PHONE, values);
    }

    /**
     * Fetch records that have <code>ADDRESS BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByAddress(String... values) {
        return fetch(Customer.CUSTOMER.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>DATE_OF_BIRTH BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfDateOfBirth(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(Customer.CUSTOMER.DATE_OF_BIRTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DATE_OF_BIRTH IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByDateOfBirth(Date... values) {
        return fetch(Customer.CUSTOMER.DATE_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>CREATED BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfCreated(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customer.CUSTOMER.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByCreated(Timestamp... values) {
        return fetch(Customer.CUSTOMER.CREATED, values);
    }

    /**
     * Fetch records that have <code>MODIFIED BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchRangeOfModified(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customer.CUSTOMER.MODIFIED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MODIFIED IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Customer> fetchByModified(Timestamp... values) {
        return fetch(Customer.CUSTOMER.MODIFIED, values);
    }
}
