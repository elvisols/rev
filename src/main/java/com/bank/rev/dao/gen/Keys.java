/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen;


import com.bank.rev.dao.gen.tables.Account;
import com.bank.rev.dao.gen.tables.Customer;
import com.bank.rev.dao.gen.tables.Statement;
import com.bank.rev.dao.gen.tables.Transfer;
import com.bank.rev.dao.gen.tables.records.AccountRecord;
import com.bank.rev.dao.gen.tables.records.CustomerRecord;
import com.bank.rev.dao.gen.tables.records.StatementRecord;
import com.bank.rev.dao.gen.tables.records.TransferRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>REV_DB</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> PK_ACCOUNT = UniqueKeys0.PK_ACCOUNT;
    public static final UniqueKey<CustomerRecord> PK_CUSTOMER = UniqueKeys0.PK_CUSTOMER;
    public static final UniqueKey<StatementRecord> PK_STATEMENT = UniqueKeys0.PK_STATEMENT;
    public static final UniqueKey<TransferRecord> PK_TRANSFER = UniqueKeys0.PK_TRANSFER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, CustomerRecord> FK_ACCOUNT_CUSTOMER_ID = ForeignKeys0.FK_ACCOUNT_CUSTOMER_ID;
    public static final ForeignKey<StatementRecord, CustomerRecord> FK_STATEMENT_CUSTOMER_ID = ForeignKeys0.FK_STATEMENT_CUSTOMER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> PK_ACCOUNT = Internal.createUniqueKey(Account.ACCOUNT, "PK_ACCOUNT", Account.ACCOUNT.ID);
        public static final UniqueKey<CustomerRecord> PK_CUSTOMER = Internal.createUniqueKey(Customer.CUSTOMER, "PK_CUSTOMER", Customer.CUSTOMER.ID);
        public static final UniqueKey<StatementRecord> PK_STATEMENT = Internal.createUniqueKey(Statement.STATEMENT, "PK_STATEMENT", Statement.STATEMENT.ID);
        public static final UniqueKey<TransferRecord> PK_TRANSFER = Internal.createUniqueKey(Transfer.TRANSFER, "PK_TRANSFER", Transfer.TRANSFER.REF);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, CustomerRecord> FK_ACCOUNT_CUSTOMER_ID = Internal.createForeignKey(com.bank.rev.dao.gen.Keys.PK_CUSTOMER, Account.ACCOUNT, "FK_ACCOUNT_CUSTOMER_ID", Account.ACCOUNT.CUSTOMER_ID);
        public static final ForeignKey<StatementRecord, CustomerRecord> FK_STATEMENT_CUSTOMER_ID = Internal.createForeignKey(com.bank.rev.dao.gen.Keys.PK_CUSTOMER, Statement.STATEMENT, "FK_STATEMENT_CUSTOMER_ID", Statement.STATEMENT.CUSTOMER_ID);
    }
}
