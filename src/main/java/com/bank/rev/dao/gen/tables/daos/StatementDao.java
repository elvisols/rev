/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen.tables.daos;


import com.bank.rev.dao.gen.tables.Statement;
import com.bank.rev.dao.gen.tables.records.StatementRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatementDao extends DAOImpl<StatementRecord, com.bank.rev.dao.gen.tables.pojos.Statement, Integer> {

    /**
     * Create a new StatementDao without any configuration
     */
    public StatementDao() {
        super(Statement.STATEMENT, com.bank.rev.dao.gen.tables.pojos.Statement.class);
    }

    /**
     * Create a new StatementDao with an attached configuration
     */
    public StatementDao(Configuration configuration) {
        super(Statement.STATEMENT, com.bank.rev.dao.gen.tables.pojos.Statement.class, configuration);
    }

    @Override
    public Integer getId(com.bank.rev.dao.gen.tables.pojos.Statement object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Statement.STATEMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchById(Integer... values) {
        return fetch(Statement.STATEMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.bank.rev.dao.gen.tables.pojos.Statement fetchOneById(Integer value) {
        return fetchOne(Statement.STATEMENT.ID, value);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Statement.STATEMENT.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByCustomerId(Integer... values) {
        return fetch(Statement.STATEMENT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfAccountNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Statement.STATEMENT.ACCOUNT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_NO IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByAccountNo(String... values) {
        return fetch(Statement.STATEMENT.ACCOUNT_NO, values);
    }

    /**
     * Fetch records that have <code>CCY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfCcy(String lowerInclusive, String upperInclusive) {
        return fetchRange(Statement.STATEMENT.CCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CCY IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByCcy(String... values) {
        return fetch(Statement.STATEMENT.CCY, values);
    }

    /**
     * Fetch records that have <code>TXN_TIMESTAMP BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfTxnTimestamp(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Statement.STATEMENT.TXN_TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TXN_TIMESTAMP IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByTxnTimestamp(Timestamp... values) {
        return fetch(Statement.STATEMENT.TXN_TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>TXN_VALUE_TIMESTAMP BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfTxnValueTimestamp(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Statement.STATEMENT.TXN_VALUE_TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TXN_VALUE_TIMESTAMP IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByTxnValueTimestamp(Timestamp... values) {
        return fetch(Statement.STATEMENT.TXN_VALUE_TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>TXN_AMOUNT BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfTxnAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Statement.STATEMENT.TXN_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TXN_AMOUNT IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByTxnAmount(BigDecimal... values) {
        return fetch(Statement.STATEMENT.TXN_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>DR_CR BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfDrCr(String lowerInclusive, String upperInclusive) {
        return fetchRange(Statement.STATEMENT.DR_CR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DR_CR IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByDrCr(String... values) {
        return fetch(Statement.STATEMENT.DR_CR, values);
    }

    /**
     * Fetch records that have <code>NARRATION BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfNarration(String lowerInclusive, String upperInclusive) {
        return fetchRange(Statement.STATEMENT.NARRATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NARRATION IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByNarration(String... values) {
        return fetch(Statement.STATEMENT.NARRATION, values);
    }

    /**
     * Fetch records that have <code>BANK_CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchRangeOfBankCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Statement.STATEMENT.BANK_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BANK_CODE IN (values)</code>
     */
    public List<com.bank.rev.dao.gen.tables.pojos.Statement> fetchByBankCode(String... values) {
        return fetch(Statement.STATEMENT.BANK_CODE, values);
    }
}
