/*
 * This file is generated by jOOQ.
 */
package com.bank.rev.dao.gen;


import com.bank.rev.dao.gen.tables.Account;
import com.bank.rev.dao.gen.tables.Customer;
import com.bank.rev.dao.gen.tables.Statement;
import com.bank.rev.dao.gen.tables.Transfer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RevDb extends SchemaImpl {

    private static final long serialVersionUID = 2053335054;

    /**
     * The reference instance of <code>REV_DB</code>
     */
    public static final RevDb REV_DB = new RevDb();

    /**
     * The table <code>REV_DB.ACCOUNT</code>.
     */
    public final Account ACCOUNT = com.bank.rev.dao.gen.tables.Account.ACCOUNT;

    /**
     * The table <code>REV_DB.CUSTOMER</code>.
     */
    public final Customer CUSTOMER = com.bank.rev.dao.gen.tables.Customer.CUSTOMER;

    /**
     * The table <code>REV_DB.STATEMENT</code>.
     */
    public final Statement STATEMENT = com.bank.rev.dao.gen.tables.Statement.STATEMENT;

    /**
     * The table <code>REV_DB.TRANSFER</code>.
     */
    public final Transfer TRANSFER = com.bank.rev.dao.gen.tables.Transfer.TRANSFER;

    /**
     * No further instances allowed
     */
    private RevDb() {
        super("REV_DB", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.S_ACCOUNT_ID,
            Sequences.S_CUSTOMER_ID,
            Sequences.S_STATEMENT_ID);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Account.ACCOUNT,
            Customer.CUSTOMER,
            Statement.STATEMENT,
            Transfer.TRANSFER);
    }
}
